{
  "name": "input-otp",
  "files": [
    {
      "name": "input-otp.tsx",
      "content": "import { Component, ComponentProps, Show, splitProps, ValidComponent } from \"solid-js\"\n\nimport OtpField, { DynamicProps, RootProps } from \"@corvu/otp-field\"\n\nimport { cn } from \"~/lib/utils\"\n\nexport const REGEXP_ONLY_DIGITS = \"^\\\\d+$\"\nexport const REGEXP_ONLY_CHARS = \"^[a-zA-Z]+$\"\nexport const REGEXP_ONLY_DIGITS_AND_CHARS = \"^[a-zA-Z0-9]+$\"\n\nconst InputOTP = <T extends ValidComponent = \"div\">(\n  props: DynamicProps<T, RootProps<T> & { class?: string | undefined }>\n) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return (\n    <OtpField\n      class={cn(\n        \"flex items-center gap-2 disabled:cursor-not-allowed has-[:disabled]:opacity-50\",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\nconst InputOTPHiddenInput = OtpField.Input\n\nconst InputOTPGroup: Component<ComponentProps<\"div\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <div class={cn(\"flex items-center\", local.class)} {...others} />\n}\n\nconst InputOTPSlot: Component<ComponentProps<\"div\"> & { index: number }> = (props) => {\n  const [local, others] = splitProps(props, [\"class\", \"index\"])\n  const context = OtpField.useContext()\n  const char = () => context.value()[local.index]\n  const showFakeCaret = () => context.value().length === local.index && context.isInserting()\n\n  return (\n    <div\n      class={cn(\n        \"relative flex size-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        showFakeCaret() && \"z-10 ring-2 ring-ring ring-offset-background\",\n        local.class\n      )}\n      {...others}\n    >\n      {char()}\n      <Show when={showFakeCaret()}>\n        <div class=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div class=\"animate-caret-blink h-4 w-px bg-foreground duration-1000\" />\n        </div>\n      </Show>\n    </div>\n  )\n}\n\nconst InputOTPSeparator: Component<ComponentProps<\"div\">> = (props) => {\n  return (\n    <div {...props}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        class=\"size-6\"\n      >\n        <circle cx=\"12.1\" cy=\"12.1\" r=\"1\" />\n      </svg>\n    </div>\n  )\n}\n\nexport { InputOTP, InputOTPHiddenInput, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n"
    }
  ],
  "type": "ui"
}